name: Sync GitHub Repo with Azure DevOps Repo

on:
  push:
    branches:
      - main  # This will trigger the workflow when changes are pushed to the main br

jobs:
  sync:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the current GitHub repository
    - name: Checkout GitHub Repository
      uses: actions/checkout@v3

    # Step 2: Set up Git (configuring user info)
    - name: Set up Git
      run: |
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"

    # Step 3: Clone the Azure DevOps repository
    - name: Clone Azure DevOps Repository
      run: |
        git clone https://DfLhmkmqszCkeHj2yWs2NgVnRFIUtWup8UtbRyhL6MV1En5tYv4jJQQJ99BBACAAAAAAAAAAAAASAZDO2Bvf@dev.azure.com/az400labms/eShopOnWeb/_git/eShopOnWeb azure-repo
        cd azure-repo
        git fetch --all
        git checkout main  # You can change this if you're syncing with another branch
        git pull origin main

    # Step 4: Copy content from GitHub to Azure DevOps repo
    - name: Copy GitHub content to Azure DevOps repo
      run: |
        pwd  
        echo "pwd"
        ls -ltr 
        echo "ls -ltra"
        cp -r azure-repo/* .  # Copy all the content from the current directory to the parent (Azure repo)

    # Step 5: Commit and push changes to Azure DevOps repo
    - name: Commit and push changes to Azure DevOps
      run: |
        git add .
        git commit -m "Sync code from GitHub to Azure DevOps"
        git remote -v
        git push github main --force  # Force push the latest code to GitHub

    # Step 6: Clean up
    - name: Clean up
      run: |
        rm -rf azure-repo
